@typeparam D
@if (DataContext == null)
{
    return;
}
<VisibleHiddenComponent Visible="DataContext.Visible" FullHeight="false" >
    @{
        SizeF size = GetViewSize();
        int rows = DataContext.Rows;
        int columns = DataContext.Columns;
        int z = 0;
        float x;
        float y = 0;
    }
    @if (DataContext.HasFrame == false)
    {
        <svg @key="DataContext" height="@GetTargetString" viewBox="0 0 @size.Width @size.Height">

            @for (int r = 0; r < rows; r++)
            {
                x = 0;
                for (int c = 0; c < columns; c++)
                {
                    if (z + 1 > DataContext.ObjectList.Count)
                    {
                        break;
                    }
                    var card = DataContext.ObjectList[z];
                    <g transform="translate(@x, @y)">
                        @ChildContent!(card)
                        @* <FlexibleDeckRenderComponent D="D" DeckObject="card">
                            
                        </FlexibleDeckRenderComponent> *@
                    </g>
                    x += DefaultSize.Width;
                    z++;
                }
                y += DefaultSize.Height;
            }
        </svg>
    }
    else
    {
        <BaseFrameBlazor @key="DataContext" IsEnabled="DataContext.IsEnabled" Text="@DataContext.Text">
            <svg height="@GetTargetString" viewBox="0 0 @size.Width @size.Height">
                @for (int r = 0; r < rows; r++)
                {
                    x = 0;
                    for (int c = 0; c < columns; c++)
                    {
                        if (z + 1 > DataContext.ObjectList.Count)
                        {
                            break;
                        }
                        var card = DataContext.ObjectList[z];
                        <g transform="translate(@x, @y)">
                            @ChildContent!(card)
                            @* <FlexibleDeckRenderComponent D="D" DeckObject="card">
                                
                            </FlexibleDeckRenderComponent> *@
                        </g>
                        x += DefaultSize.Width;
                        z++;
                    }
                    y += DefaultSize.Height;
                }
            </svg>
        </BaseFrameBlazor>
    }
</VisibleHiddenComponent>