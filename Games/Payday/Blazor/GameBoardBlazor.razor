@using cc1 = CommonBasicLibraries.BasicDataSettingsAndProcesses.SColorString
@using CommonBasicLibraries.AdvancedGeneralFunctionsAndProcesses.BasicExtensions;
@using gg1 = Payday.Core.Graphics.GameBoardGraphicsCP;
@if (GraphicsData == null)
{
    return;
}
<RawGameBoard TargetHeight="@TargetHeight"
              BoardSize="gg1.OriginalSize"
              >
    <ResourceImage Assembly="GetAssembly"
                   Width="@gg1.OriginalSize.Width.ToString()"
                   FileName="board.svg"
                   Height="@gg1.OriginalSize.Height.ToString()" />
    @foreach (var space in GraphicsData.GameContainer.PrivateSpaceList)
    {
        var position = gg1.GetPositionList(space);
        foreach (var item in position)
        {
            <BasePieceGraphics
                               ForceRender="true"
                               Location="item.Bounds.Location"
                               LongestSize="item.Bounds.Width">
                <PawnPiece MainColor="@item.Color" />
            </BasePieceGraphics>
        }
    }
    @if (Test!.AllowAnyMove == true && GraphicsData.GameContainer.SaveRoot!.NumberHighlighted > -1)
    {
        @foreach(var space in GraphicsData.GameContainer.PrivateSpaceList)
        {
            @if (space.Index != 0)
            {
                <TransparentButton
                               ButtonLocation="space.Area.Location"
                               ButtonSize="space.Area.Size"
                               ButtonClicked="() => SpaceClickedAsync(space.Index)" />
            }
        }
        return;
    }
    @if (GraphicsData.GameContainer.SaveRoot!.NumberHighlighted > -1)
    {
        if (GraphicsData.SpaceList.Keys.Contains(GraphicsData.GameContainer.SaveRoot.NumberHighlighted.ToString()))
        {
            var space = GraphicsData.SpaceList[GraphicsData.GameContainer.SaveRoot.NumberHighlighted.ToString()];
            <TransparentButton
                               BorderColor="@cc1.Blue" 
                               BorderWidth="4" 
                               ButtonLocation="space.Bounds.Location"
                               ButtonSize="space.Bounds.Size"
                               ButtonClicked="() => SpaceClickedAsync(GraphicsData.GameContainer.SaveRoot.NumberHighlighted)" />
        }
    }

    <RawRectangle Rectangle="GraphicsData.LotteryRectangle">
        <CenteredTextBlazor TextColor="@cc1.Aqua" BorderWidth="2" BorderColor="@cc1.Black" FontSize="45" Text="@GraphicsData.GameContainer.SaveRoot.LotteryAmount.ToCurrency(0)" />
    </RawRectangle>
</RawGameBoard>