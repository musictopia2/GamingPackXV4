@inherits BasicGameView<DealCardGameMainViewModel>
@if (_vmData == null || DataContext == null || _gameContainer == null)
{
    return;
}
@{
    bool isTesting = false;
}
@if (isTesting)
{
    <TestCardComponent />
    return;
}
@if (_gameContainer.PersonalInformation.NeedsPayment )
{
    <MakePaymentComponent />
    return;
}
<GridContainer Rows="@Rows" ColumnGap="5px" RowGap=5px Columns="auto 35vw 1fr">
    <GridItem Row="1" Column="1">
        <StackLayout>
            <StackItem>
                <DrawPileBlazor DeckPile="_vmData.Deck1" />
            </StackItem>
            <StackItem>
                <SingleMiscPileBlazor SinglePile="_vmData.Pile1" />
            </StackItem>
        </StackLayout>
    </GridItem>
    <GridItem Column="2" Row="1">
        <HandBlazor TargetContainerSize="35vw" Hand="_vmData.PlayerHand1" />
    </GridItem>
    <GridItem Row="2" Column="1" ColumnSpan="2">
        <div>
            <GameButtonComponent Display="Play" CommandObject="PlayCommand" />
            <GameButtonComponent Display="End Turn" CommandObject="EndTurnCommand" />
            <GameButtonComponent Display="Bank" CommandObject="BankCommand" />
        </div>
        <div>
            <LabelGridComponent DataContext="_vmData" Labels="_labels" />
        </div>
        <div>
            <ScoreBoardBlazor P="DealCardGamePlayerItem"
                              Columns="_scores"
                              Players="_gameContainer.SaveRoot.PlayerList" />
        </div>
        @if (_vmData.ShownCard is not null)
        {
            <CardGraphicsBlazor DeckObject="_vmData.ShownCard" TargetHeight="15vh" />
        }
        

        @if (_vmData.ChosenPlayer is not null)
        {
            <div style="font-size: 2rem;">
                @_vmData.ChosenPlayer
            </div>
            @if (_vmData.StolenCards.HandList.Count > 0)
            {
                <HandBlazor TargetContainerSize="35vw" Hand="_vmData.StolenCards" />
            }
        }
        @if (_gameContainer.SaveRoot.GameStatus == EnumGameStatus.ConfirmPayment)
        {
            <HandBlazor TargetContainerSize="35vw" Hand="_vmData.Payments" />
            <div>
                <GameButtonComponent Display="Resume" CommandObject="ResumeCommand" />
            </div>
        }
    </GridItem>
    <GridItem Column="3" Row="1" RowSpan="3">
        <CompletePlayerSetsComponent SetCommand=SetChosenCommand Players="GetPlayers()" />
    </GridItem>

</GridContainer>



